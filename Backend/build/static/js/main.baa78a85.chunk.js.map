{"version":3,"sources":["components/LeftContainer.js","redux/actionTypes.js","components/Friendly.js","components/Location.js","components/Staff.js","components/Services.js","components/ServiceExtras.js","components/DateTime.js","components/Information.js","components/FriendlyConfirmation.js","components/Confirmation.js","components/BookingConfirmed.js","components/RightContainer.js","components/MainPage.js","App.js","serviceWorker.js","redux/reducers/rootReducer.js","index.js"],"names":["currentTab","currentState","state","currentHeading","connect","ownProps","init","props","stateName","returnState","currentPageState","id","className","STAFF","PAGE_STATE","Avatar","src","img","alt","name","height","UserName","dispatch","changecurrentPageState","type","actions","payload","newLocationValue","location","newstaffValue","staff","newservicesValue","services","extraService","individualData","elementProperty","map","e","key","onClick","event","price","newCurrentPageState","handleEvent","Location","locationData","locationProps","console","log","process","this","React","Component","Staff","staffData","staffProps","info","Services","serviceData","serviceProps","ServiceExtras","selectDateAndTime","dateAndTime","useState","Date","date","onChangeDate","time","onChangeTime","onSubmit","preventDefault","toLocaleString","onChange","value","Information","handleChange","target","setState","handleSubmit","statedata","check","Object","values","i","length","validateForm","changeInformation","error","alert","fullName","address","additionalInfo","mobile","noValidate","style","float","htmlFor","information","bookingConfirmed","requestId","discount","setDiscount","color","fontFamily","flag","servicePrice","Number","extraservicePrice","discountPrice","totalPrice","sessionStorage","setItem","placeholder","textAlign","href","totalamount","getItem","pageState","request_id","parseInt","Math","random","axios","post","customerData","then","response","catch","Confirmation","BookingConfirmed","RightContainerComponent","MainPage","LeftContainer","RightContainer","App","Boolean","window","hostname","match","lastId","initState","confirmation","reducer","action","actionTypes","description","resolved","filter","bug","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.baa78a85.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux'\n\n\nconst currentTab = (currentState, state) => {\n    if (currentState === state) {\n        return \"circleonclick\";\n    } else if (currentState > state) {\n        return \"circleafterclick\";\n    } else {\n        return \"circlebeforeclick\";\n\n    }\n};\nconst currentHeading = (currentState, state) => {\n    if (currentState === state) {\n        return \"selected\";\n    } else {\n        return \"non-selected\";\n    }\n};\n\nconst returnState = (stateName) => {\n    switch (stateName) {\n        case \"location\":\n            return 1;\n        case \"staff\":\n            return 2;\n        case \"services\":\n            return 3;\n        case \"extraService\":\n            return 4;\n        case \"dateAndTime\":\n            return 5;\n        case \"information\":\n            return 6;\n        case \"confirmation\":\n            return 7;\n        case \"bookingConfirmed\":\n            return 8;\n        default: return 1\n\n    }\n}\n\nfunction LeftContainerComponent(props) {\n    // TODO: put current state from hook in the \n    let currentpagestate = props.init.currentPageState\n    const currentState = returnState(currentpagestate);\n    return (\n        <div id=\"leftsidecontainer\" >\n            <div id=\"leftcontainerdata\" className=\"leftcontdata\">\n                <div className=\"nameproperty\">\n                    <span className={currentTab(currentState, 1)}>1</span>\n                    <span className={currentHeading(currentState, 1)}> Location </span>\n                </div>\n                <div className=\"nameproperty\">\n                    <span className={currentTab(currentState, 2)}>2</span>\n                    <span className={currentHeading(currentState, 2)}> staff </span>\n                </div>\n                <div className=\"nameproperty\">\n                    <span className={currentTab(currentState, 3)}>3</span>\n                    <span className={currentHeading(currentState, 3)}> Services </span>\n                </div>\n                <div className=\"nameproperty\">\n                    <span className={currentTab(currentState, 4)}>4</span>\n                    <span className={currentHeading(currentState, 4)} > Service Extras </span>\n                </div>\n\n                <div className=\"nameproperty\">\n                    <span className={currentTab(currentState, 5)}>5</span>\n                    <span className={currentHeading(currentState, 5)}> Date and Time </span>\n                </div>\n\n                <div className=\"nameproperty\">\n                    <span className={currentTab(currentState, 6)}>6</span>\n                    <span className={currentHeading(currentState, 6)}> Information </span>\n                </div>\n\n                <div className=\"nameproperty\">\n                    <span className={currentTab(currentState, 7)}>7</span>\n                    <span className={currentHeading(currentState, 7)}> Confirmation </span>\n                </div>\n                <div className=\"nameproperty\">\n                    {/* <span className={currentTab(currentState, 8)}></span> */}\n                    <span className={currentHeading(currentState, 8)}>  </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n//redux mappings\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        init: state\n    }\n}\n\n\nexport default connect(mapStateToProps)(LeftContainerComponent)\n","export const BUG_ADDED ='bugAdded'\nexport const BUG_REMOVED ='bugRemoved'\nexport const BUG_RESOLVED ='bugResolved'\n\nexport const LOCATION = \"locationAdded\"\nexport const STAFF = \"staffAdded\"\nexport const SERVICES = \"serviceAdded\"\nexport const EXTRA_SERVICES = \"extraservicesAdded\"\nexport const DATE_TIME =\"dateTimeAdded\"\nexport const INFORMATION =\"informationAdded\"\nexport const CONFIRMATION =\"confimation\"\nexport const BOOKING_CONFIRMED =\"bookingConfirmed\"\nexport const REQUEST_ID =\"requestId\"\n\n\nexport const PAGE_STATE =\"pageStateUpdated\"\n\n","import React from \"react\";\nimport { connect } from 'react-redux'\nimport * as actions from '../redux/actionTypes'\n\n\nfunction Friendly(props) {\n\n    const { elementProperty } = props\n\n\n    const individualData = elementProperty.map((e) => {\n        return (\n            <span key={e.id}>\n                <button id=\"friendly\" onClick={(event) => handleEvent(e.name, e.price)}>\n                    <div id=\"cardprops\">\n                        <Avatar img={e.img} />\n                        <UserName name={e.name} />\n                        {e.price ? <span>{e.price} Rs   </span> : null}\n                    </div>\n                </button>\n            </span>\n        )\n    })\n\n    return (\n        <>\n            {individualData}\n        </>\n    );\n\n    function handleEvent(name, price = 0) {\n\n        let newCurrentPageState = props.init.currentPageState //location\n\n        if (newCurrentPageState === 'location') {\n            props.changecurrentPageState('staff')\n            props.newLocationValue(name)\n\n        }\n        else if (newCurrentPageState === 'staff') {\n            props.changecurrentPageState('services')\n            props.newstaffValue(name)\n        }\n        else if (newCurrentPageState === 'services') {\n            props.changecurrentPageState('extraService')\n            props.newservicesValue({ name, price })\n        }\n        else if (newCurrentPageState === 'extraService') {\n            props.changecurrentPageState('dateAndTime')\n            props.extraService({ name, price })\n        } else {\n        }\n\n    }\n\n\n}\n//avatar complex component\nfunction Avatar(props) {\n    return (\n        < img src={props.img} alt={props.name} height=\"400px\" id=\"avatar\" />\n    );\n}\n\n//username component\n\nfunction UserName(props) {\n    return (\n        <h1 id=\"username\">{props.name}</h1>\n    );\n}\n\n//redux mappings\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        init: state\n    }\n}\n\nconst mapDispatchToPropsLocation = (dispatch, ownProps) => {\n\n    return {\n        changecurrentPageState: (currentPageState) => { dispatch({ type: actions.PAGE_STATE, payload: { currentPageState: currentPageState } }) },\n        newLocationValue: (location) => { dispatch({ type: actions.LOCATION, payload: { location: location } }) },\n        newstaffValue: (staff) => { dispatch({ type: actions.STAFF, payload: { staff: staff } }) },\n        newservicesValue: (services) => { dispatch({ type: actions.SERVICES, payload: { services: services } }) },\n        extraService: (extraService) => { dispatch({ type: actions.EXTRA_SERVICES, payload: { extraService: extraService } }) },\n\n\n    }\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToPropsLocation)(Friendly)","import React from \"react\";\nimport Friendly from './Friendly'\n\nclass Location extends React.Component {\n    locationData = {\n        locationProps: [\n            { name: \"Rohtak\", img: \"image1.jpg\", id: 1 },\n            { name: \"Sampla\", img: \"image2.jpg\", id: 2 },\n            { name: \"Kalanaur\", img: \"image3.jpg\", id: 3 },\n            { name: \"Bhiwani\", img: \"image4.jpg\", id: 4 },\n            { name: \"Delhi\", img: \"image5.jpg\", id: 5 },\n            { name: \"Hisar\", img: \"image5.jpg\", id: 6 },\n            // { name: \"Add new City\", img: \"image6.jpg\", id: 6 }\n        ]\n    }\n    render() {\n    console.log(\"REACT_APP_HOST\",process.env.REACT_APP_HOST)\n\n        return (\n\n            <div>\n                <span><Friendly elementProperty={this.locationData.locationProps} /></span>\n            </div>\n\n\n        )\n    }\n}\n\nexport default Location","import React from \"react\";\nimport Friendly from './Friendly'\n\nclass Staff extends React.Component {\n\n    staffData = {\n        staffProps: [\n\n            { name: \"Spider Man\", img: \"spiderman.png\" , info: \"1123456789\" , id : 1},\n            { name: \"Ant Man\", img: \"antman.png\",  info: \"2123456789\", id : 2 },\n            { name: \"Bat Man\", img: \"batman.jpg\" , info: \"3123456789\" , id : 3},\n            { name: \"Iron Man\", img: \"ironman.jpg\" , info: \"4123456789\" , id :4 },\n            { name: \"Super Man\", img: \"superman.png\",  info: \"5123456789\" , id :5 },\n            { name: \"He Man\", img: \"Heman.jpeg\", info: \"6123456789\" , id :6 }\n\n        ]\n    }\n\n    render() {\n        return (\n\n            <div>\n                <span><Friendly elementProperty={this.staffData.staffProps} /></span>\n            </div>\n\n        )\n    }\n}\n\nexport default Staff","import Friendly from './Friendly'\nimport React from \"react\";\n\nclass Services extends React.Component {\n    serviceData = {\n        serviceProps: [\n\n            { name: \"Eureka Forbes\", img: \"water1.jpg\", price: \"100\", id: 1 },\n            { name: \"Aquaguard\", img: \"geyser.jpg\", price: \"500\", id: 2 },\n            { name: \"Reve Osmosis (RO)\", img: \"water1.jpg\", price: \"1000\", id: 3 },\n            { name: \"Kent (RO)\", img: \"water1.jpg\", price: \"2000\", id: 4 },\n            { name: \"Aquasure (RO)\", img: \"water1.jpg\", price: \"500\", id: 5 },\n            { name: \"water Geyser\", img: \"geyser.jpg\", price: \"5000\", id: 6 },\n\n        ]\n    }\n\n    render() {\n        return (\n\n            <div>\n                <span><Friendly elementProperty={this.serviceData.serviceProps} /></span>\n            </div>\n\n        )\n    }\n}\n\nexport default Services","import React from \"react\";\nimport Friendly from \"./Friendly\";\n\nclass ServiceExtras extends React.Component {\n    serviceData = {\n        serviceProps: [\n\n            { name: \"Membrane\", img: \"water1.jpg\", price: \"100\", id: 1 },\n            { name: \"Pipe\", img: \"geyser.jpg\", price: \"200\", id: 2 },\n            { name: \"Chimney\", img: \"water1.jpg\", price: \"500\", id: 3 },\n            { name: \"Gas know\", img: \"water1.jpg\", price: \"100\", id: 4 },\n            { name: \"Led bulb (RO)\", img: \"water1.jpg\", price: \"100\", id: 5 },\n            { name: \"Concealed\", img: \"geyser.jpg\", price: \"400\", id: 6 },\n\n        ]\n    }\n\n    render() {\n        return (\n\n            <div>\n                <span><Friendly elementProperty={this.serviceData.serviceProps} /></span>\n            </div>\n\n        )\n    }\n}\n\nexport default ServiceExtras","import React, { useState } from \"react\";\nimport { connect } from 'react-redux'\nimport * as actions from '../redux/actionTypes'\nimport DatePicker from 'react-date-picker'\nimport TimePicker from 'react-time-picker';\n\nfunction DateTime(props) {\n\n    let [date, onChangeDate] = useState(new Date())\n    let [time, onChangeTime] = useState('10:00');\n\n    let newCurrentPageState = props.init.currentPageState //dateAndTime\n\n    let handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (newCurrentPageState === \"dateAndTime\") {\n            props.changecurrentPageState('information')\n            date = date.toLocaleString()\n            props.selectDateAndTime({ date, time })\n        }\n    }\n\n    return (\n        <div >\n            <form onSubmit={handleSubmit}>\n                <span> Please select desired Date (MM/DD/YYYY) :</span>\n                <DatePicker className=\"datepickr\"\n                    onChange={onChangeDate}\n                    value={date}\n                />\n                <br />\n                <br />\n                <span> Please select desired Time:</span>\n\n                <TimePicker className=\"timepickr\"\n                    onChange={onChangeTime}\n                    value={time}\n                />\n                <br />\n                <br />\n\n                <div className='submit' id=\"dateandtimediv\">\n                    <button id=\"confirmationbutton\">Next</button>\n                </div>\n            </form>\n\n        </div>\n\n\n    )\n}\n\n\n//redux mappings\nconst mapStateToProps = (state, ownProps) => {\n\n    return {\n        init: state\n    }\n}\n\nconst mapDispatchToPropsLocation = (dispatch, ownProps) => {\n\n    return {\n        changecurrentPageState: (currentPageState) => { dispatch({ type: actions.PAGE_STATE, payload: { currentPageState: currentPageState } }) },\n        selectDateAndTime: (dateAndTime) => { dispatch({ type: actions.DATE_TIME, payload: { dateAndTime: dateAndTime } }) },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToPropsLocation)(DateTime)\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../redux/actionTypes'\n\n// const validEmailRegex = RegExp(\n//     /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n// );\nconst validateForm = statedata => {\n    let check = Object.values(statedata)\n    for (let i = 0; i < check.length; i++) {\n        if (i === 2) {\n            continue\n        } else if (check[i] === null || check[i].length === 0) {\n            return false\n        }\n    }\n    return true\n};\n\nclass Information extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fullName: null,\n            address: null,\n            additionalInfo: null,\n            mobile: null,\n        };\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"this.state\", this.state)\n\n        if (validateForm(this.state)) {\n            console.info('Valid Form')\n            let newCurrentPageState = this.props.init.currentPageState //information\n\n            if (newCurrentPageState === \"information\") {\n                this.props.changecurrentPageState('confirmation')\n                this.props.changeInformation(this.state)\n\n            }\n        } else {\n            console.error('Invalid Form')\n            alert('please enter correct details')\n        }\n    }\n\n    render() {\n        return (\n\n            <div className='wrapper' id=\"friendlyprops\">\n                <h4>Please Fill Your information</h4>\n                <br />\n                <div className='form-group'>\n\n\n                    <form onSubmit={this.handleSubmit} noValidate>\n                        <div className='form-group col-md-6' style={{ float: \"left\" }}>\n                            <label htmlFor=\"fullName\">Full Name*</label>\n                            <input type='text' className=\"form-control\" name='fullName' onChange={this.handleChange} noValidate />\n                        </div>\n\n\n                        <div className='form-group col-md-6' style={{ float: \"right\" }}>\n                            <label htmlFor=\"address\">address*</label>\n                            <input type='text' className=\"form-control\" name='address' onChange={this.handleChange} noValidate />\n                        </div>\n\n                        <div className='form-group col-md-6' style={{ float: \"left\" }} >\n                            <label htmlFor=\"mobile\">mobile*</label>\n                            <input type='text' className=\"form-control\" name='mobile' onChange={this.handleChange} noValidate />\n                        </div>\n\n                        <div className='form-group col-md-6' style={{ float: \"right\" }} >\n                            <label htmlFor=\"additionalInfo\">additionalInfo</label>\n                            <input type='text' className=\"form-control\" name='additionalInfo' onChange={this.handleChange} noValidate />\n                        </div>\n\n                        <div className='submit' id = \"informationdiv\">\n                            <button id=\"confirmationbutton\">Next</button>\n                        </div>\n                        \n                    </form>\n\n                </div>\n\n                \n            </div>\n        );\n    }\n}\n\n\n//redux mappings\nconst mapStateToProps = (state, ownProps) => {\n\n    return {\n        init: state\n    }\n}\n\nconst mapDispatchToPropsLocation = (dispatch, ownProps) => {\n\n    return {\n        changecurrentPageState: (currentPageState) => {\n            dispatch({ type: actions.PAGE_STATE, payload: { currentPageState: currentPageState } })\n        },\n        changeInformation: (information) => {\n            dispatch({ type: actions.INFORMATION, payload: { information: information } })\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToPropsLocation)(Information)","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from '../redux/actionTypes'\nimport axios from 'axios'\nlet host = process.env.REACT_APP_HOST\nlet server_port = process.env.REACT_APP_PORT || 4000\n\n// axios.defaults.baseURL = host + server_port\n\nfunction FriendlyConfirmation(props) {\n    const [discount, setDiscount] = useState('')\n\n    let handleChange = (e) => {\n        e.preventDefault()\n        let totalamount = sessionStorage.getItem('totalprice')\n        console.log('totalamount', totalamount)\n        let pageState = props.init\n\n        let request_id = parseInt(Math.random() * 1000) + 1\n        pageState.requestId = request_id\n        pageState.totalamount = totalamount\n\n        if (pageState.currentPageState === \"confirmation\") {\n            axios\n            // .post(\"/new/\", {\n                .post(\"/new/\", {\n                    customerData: pageState\n                })\n                .then(function (response) {\n                    props.changecurrentPageState('bookingConfirmed')\n                    props.bookingConfirmed('yes')\n                    props.requestId(request_id)\n\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n\n        }\n\n    }\n\n    switch (props.id) {\n        case 'friendly1': {\n            return (\n                <div id={props.id}>\n\n                    <div style={{ float: \"right\" }}>\n                        <span style={{ color: \"#6C70DC\", fontFamily: 'Poppins' }}>Location: <span> </span></span>\n                        <span>  {props.flag.location} </span>\n                    </div>\n                    <div style={{ float: \"left\" }}>\n                        <span style={{ color: \"#6C70DC\", fontFamily: 'Poppins' }}>Date & TIme: <span> </span></span>\n                        <span>  {props.flag.dateAndTime.date} <span> -</span> {props.flag.dateAndTime.time} </span>\n                    </div>\n\n                </div>\n            );\n\n        }\n\n        case 'friendly2': {\n            const servicePrice = Number(props.flag.services.price ? props.flag.services.price : 0)\n            const extraservicePrice = Number(props.flag.extraService.price ? props.flag.extraService.price : 0)\n            let discountPrice = 0;\n            let totalPrice = servicePrice + extraservicePrice + discountPrice\n            // let discountdata = sessionStorage.getItem(\"mydiscountkey\")\n            console.log('discountdata in friendly2', discount)\n            if(discount === 'discount5'){\n\n                discountPrice = 0.05 * totalPrice //5% discount\n                totalPrice = totalPrice - discountPrice\n\n            }else if(discount === 'discount10'){\n                discountPrice = 0.10 * totalPrice //5% discount\n                totalPrice = totalPrice - discountPrice\n            }\n\n            sessionStorage.setItem('totalprice', totalPrice)\n\n            return (\n                <div id={props.id} >\n                    <div>\n                        <span style={{ float: \"left\", color: \"#E09B22\" }}>{props.flag.services.name} </span>\n                        <span style={{ float: \"right\", color: \"#E09B22\" }}>{servicePrice} Rs </span><br />\n\n                        {props.flag.extraService.name ? <div>\n                            <span style={{ float: \"left\", color: \"#E09B22\" }}> {props.flag.extraService.name} </span>\n                            <span style={{ float: \"right\", color: \"#E09B22\" }}> {extraservicePrice} Rs </span>\n                        </div>\n                            : null\n                        }\n                        <input type=\"text\" name=\"discount\" id=\"discountinput\" placeholder=\"Enter Coupon Code\" value={discount} onChange={e => setDiscount(e.target.value)} />\n\n                        {/* <br/>\n                        <span style={{ float: \"left\", color: \"#5ac36e\" }}> Discount</span>\n                        <span style={{ float: \"right\", color: \"#5ac36e\" }}>{discountPrice} Rs </span> */}\n                    </div>\n                    <br /><br /><br /><br /><br /><br /><br /><br /><br />\n                    <div>\n                        <span style={{ float: \"left\", color: \"green\" }}>Total Price </span>\n                        <span style={{ float: \"right\", color: \"green\" }}> {totalPrice} Rs </span><br />\n                    </div>\n                </div>\n            )\n        }\n        case 'friendly3': {\n            return (\n                <div id={props.id} >\n                    <div style={{ float: \"left\", textAlign: \"left\" }}>\n                        {/*  eslint-disable-next-line */}\n                        <a href=\"#\">Credit Card</a><br />\n                        {/*  eslint-disable-next-line */}\n                        <a href=\"#\"> Paytm</a><br />\n                        {/*  eslint-disable-next-line */}\n                        <a href=\"#\"> Google Pay</a><br />\n                        {/*  eslint-disable-next-line */}\n                        <a href=\"#\"> Phone Pay</a><br />\n                        {/*  eslint-disable-next-line */}\n                        <a href=\"#\"> NetBanking</a><br />\n                    </div>\n                </div>\n            )\n        }\n        case 'friendly4': {\n            return (\n                <div id={props.id} >\n                    <div>\n                        <button id=\"confirmationbutton\" onClick={handleChange}>CONFIRM BOOKING</button>\n                    </div>\n                </div>\n            )\n        }\n        default: break\n    }\n}\n\n//redux mappings\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        init: state\n    }\n}\n\nconst mapDispatchToPropsLocation = (dispatch, ownProps) => {\n\n    return {\n        changecurrentPageState: (currentPageState) => { dispatch({ type: actions.PAGE_STATE, payload: { currentPageState: currentPageState } }) },\n        bookingConfirmed: (bookingConfirmed) => { dispatch({ type: actions.BOOKING_CONFIRMED, payload: { bookingConfirmed: bookingConfirmed } }) },\n        requestId: (requestId) => {\n            dispatch({ type: actions.REQUEST_ID, payload: { requestId: requestId } })\n\n        },\n\n\n    }\n\n}\nexport default connect(mapStateToProps, mapDispatchToPropsLocation)(FriendlyConfirmation)","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from '../redux/actionTypes'\nimport FriendlyConfirmation from \"./FriendlyConfirmation\";\n\n\n\nclass Confirmation extends React.Component {\n\n    render() {\n        return (\n            <div id=\"veryouter\">\n                <div id=\"outerdiv\">\n                    <div id=\"friendlyprops\">\n                        <FriendlyConfirmation flag={this.props.init} id=\"friendly1\" />\n                    </div>\n                    <div>\n                        <div>\n                            <FriendlyConfirmation flag={this.props.init} id=\"friendly2\" />\n                        </div>\n                        <div>\n                            <FriendlyConfirmation flag={this.props.init} id=\"friendly3\" />\n                        </div>\n                    </div>\n                    <div id=\"friendlyprops\">\n                        <FriendlyConfirmation flag={this.props.init} id=\"friendly4\" />\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n//redux mappings\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        init: state\n    }\n}\n\nconst mapDispatchToPropsLocation = (dispatch, ownProps) => {\n\n    return {\n        changecurrentPageState: (currentPageState) => { dispatch({ type: actions.PAGE_STATE, payload: { currentPageState: currentPageState } }) },\n        bookingConfirmed: (bookingConfirmed) => { dispatch({ type: actions.BOOKING_CONFIRMED, payload: { bookingConfirmed: bookingConfirmed } }) },\n\n\n    }\n\n}\nexport default connect(mapStateToProps, mapDispatchToPropsLocation)(Confirmation)\n","import React from \"react\";\nimport { BOOKING_CONFIRMED } from '../redux/actionTypes'\nimport { connect } from 'react-redux'\n\nclass BookingConfirmed extends React.Component {\n    render() {\n       \n        let request_id = this.props.init.requestId\n\n        return (\n            <div id=\"veryouter\">\n                <div id=\"outerdiv\">\n                    <div id=\"friendlyprops\">\n                        <div className=\"container\">\n                            <h1 className=\"center\">Confirmation</h1><br />\n                            <h3 id=\"h3_\">Thank you for your request!</h3><br />\n                            <h4 id=\"h3_\"> Your confirmation id is: {request_id} </h4><br />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        init: state\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changecurrentPageState: (currentPageState) => {\n            dispatch({ type: BOOKING_CONFIRMED, payload: { currentPageState: currentPageState } })\n        }\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingConfirmed)","import React from \"react\";\nimport Location from './Location'\nimport Staff from './Staff'\nimport Services from './Services'\n\n\nimport { connect } from 'react-redux'\nimport { PAGE_STATE } from '../redux/actionTypes'\nimport ServiceExtras from \"./ServiceExtras\";\nimport DateTime from \"./DateTime\";\nimport Information from './Information'\nimport Confirmation from './Confirmation'\nimport BookingConfirmed from './BookingConfirmed'\n\nclass RightContainerComponent extends React.Component {\n\n\n    render() {\n        let CurrentPageState = this.props.init.currentPageState\n        // console.log('CurrentPageState', CurrentPageState)\n\n        switch (CurrentPageState) {\n            case 'location': return (<div><Location /></div>);\n            case 'staff': return (<div><Staff /></div>);\n            case 'services': return (<div><Services /></div>);\n            case 'extraService': return (<div><ServiceExtras /></div>);\n            case 'dateAndTime': return (<div><DateTime /></div>);\n            case 'information': return (<div id= \"resize_div\"><Information /></div>);\n            case 'confirmation': return (<div ><Confirmation /></div>); //id= \"resize_div\"\n            case 'bookingConfirmed': return (<div ><BookingConfirmed /></div>); \n            default: return (<div><Location /></div>);\n        }\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        init: state\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changecurrentPageState: (currentPageState) => { dispatch({ type: PAGE_STATE, payload: { currentPageState: currentPageState } }) }\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightContainerComponent)\n\n\n\n\n\n","import React from 'react';\nimport LeftContainerComponent from './LeftContainer'\nimport RightContainerComponent from './RightContainer'\n\nfunction MainPage() {\n   \n    return (\n\n        <div className=\"MainPage\">\n            <h1 id=\"h1\"> Welcome to booking app</h1>\n            <div id=\"Wrapper\">\n                <div id=\"container\">\n                    <LeftContainerComponent />\n                    <div id=\"rightsidecontainer\">\n                        <div id=\"rightcontainerdata\">\n                            <RightContainerComponent />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default MainPage;\n","import React from 'react';\nimport './App.css';\nimport MainPage from \"./components/MainPage\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <MainPage/>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actionTypes'\nlet lastId = 0;\n\nlet initState = {\n    location: \"\",\n    staff: \"\",\n    services: \"\",\n    extraService: \"\",\n    dateAndTime: \"\",\n    information: \"\",\n    confirmation: \"\",\n    currentPageState: \"location\",//all in lowercase,\n    bookingConfirmed: null,\n    requestId : ''\n}\n\n\nfunction reducer(state = initState, action) {\n    // console.log('action in rootreducer', action)\n    // console.log('state in rootreducer', state)\n\n\n    switch (action.type) {\n\n\n        case actionTypes.LOCATION:\n            return {\n                ...state,\n                location: action.payload.location //[...state.location, action.payload.cityName]\n            }\n        case actionTypes.STAFF:\n            return {\n                ...state,\n                staff: action.payload.staff\n\n            }\n\n        case actionTypes.SERVICES:\n            return {\n                ...state,\n                services: action.payload.services\n\n            }\n\n        case actionTypes.EXTRA_SERVICES:\n            return {\n                ...state,\n                extraService: action.payload.extraService\n\n            }\n\n        case actionTypes.DATE_TIME:\n            return {\n                ...state,\n                dateAndTime: action.payload.dateAndTime\n\n            }\n\n        case actionTypes.INFORMATION:\n            return {\n                ...state,\n                information: action.payload.information\n\n            }\n\n        case actionTypes.CONFIRMATION:\n            return {\n                ...state,\n                confirmation: action.payload.confirmation\n\n            }\n        case actionTypes.PAGE_STATE:\n            return {\n\n                ...state,\n                currentPageState: action.payload.currentPageState\n            }\n\n        case actionTypes.BOOKING_CONFIRMED:\n            return {\n\n                ...state,\n                bookingConfirmed: action.payload.bookingConfirmed\n            }\n\n        case actionTypes.REQUEST_ID:\n            return {\n\n                ...state,\n                requestId: action.payload.requestId\n            }\n\n        //just for references...will be deleted later on \n        case actionTypes.BUG_ADDED:\n            return [\n                ...state,\n                {\n                    id: ++lastId,\n                    description: action.payload.description,\n                    resolved: false\n                }\n            ]\n\n        case actionTypes.BUG_REMOVED:\n            return state.filter((bug) => bug.id !== action.payload.id)\n\n        case actionTypes.BUG_RESOLVED:\n            return state.map(bug => bug.id !== action.payload.id ? bug : { ...bug, resolved: true })\n\n\n        default:\n            return state\n\n    }\n\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\nimport reducer from './redux/reducers/rootReducer'\n\nconst store = createStore(reducer)\n// store.subscribe(() => {\n//   console.log('state updated to', store.getState()) \n// })\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}> <App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}